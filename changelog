2.1.0
-----
- Large-scale rewrite of code
- Migrated to a python class-based structure and split code into multiple modules. Will make the
    code much easier to maintain going forward.
- Changed from comparing date/time strings to using timestamps. Makes date comparisons and
	time tracking much simpler.
- Simpler date/time format matching. Should eliminate (all?) local date/time format issues from 2.0.x series.
- Added new reports to organize backup jobs by source, destination, and run date
- Fixed and standardized internal date and time comparison processes by using timestamps everywhere in the database instead of date/time strings.
- Easy modification of date/time formats for international use (dateformat= and timeformat= .rc options)
- Date/time format can be specified per src/dest pair, if jobs are running in different locales.
- Dates can now be displayed in 12- or 24-hour format (display24hourtime= .rc option)
- Report can now use keyword substitution for subheading titles
- Reports can now be sent to one or more files in HTML, txt, or csv formats (-f command line option)
- Can prevent sending report email if only saving to output file (-x command line option)
- Option to email job warnings/errors if in collect mode (-c command line option, warnoncollect= .rc option)
- Column headings can be customized ([headings] section in .rc file)
- User can select which columns to display in a report ([headings] section in .rc file)
- Can specify background colors for subtitles, messages, warnings, and errors
- UTC offset information from email header now applied to backup endDate and startDate fields (applyutcoffset= .rc option)
- UTC timestamp now recognized in startDate & endDate fields from Duplicati emails (feature currently unused, prepping for upcoming Duplicati release feature)
- Database & .rc file upgrades now handled automatically
- Logging information generated before log files are opened is now captured and saved
- Using HTML <detail> tags in message/warning/error output to clean up the HTML report. Not supported in all browsers or email clients, so end user experience may vary.
- Ability to roll back database to a specific time/date (-b option). Useful for failed runs or testing.
- Changed bahavior of -i option (again!). After initialization, if program can continue, it will. Also eliminated undocumented -I option.
- Ability to remove a source/destination pair from the database if it is no longer in use (-m option)
- Purge emails that are no longer on the server from the database. (-p option or [main] purgedb in .rc file)
- Send separate warning email when a backupset has not been seen in a certain number of days ([report] nobackupwarn options)


2.0.4
-----
Issue #18, #19, #21 - Several iterations of fixes for these issues. Should now be able to handle most
            global date formats. Probably.

2.0.3
-----
Issue #1 - Initialization with -i option will now always stop program after initialization. 
           Non-critical changes/updates to the .rc file will now allow the program to continue 
           with default option configs.
Issue #7 - Fixed the way failed backup jobs are parsed & reported.
Issue #8 - Flush file buffer after every log write
Issue #10 - Added ability to sort the report by source or destination
Issue #12 - Added level 3 logging and changed logging scheme
Issue #13 - Fixed 24-hour date conversion errors
Issue #14 - Deal with binary-encoded messages from mutant email senders.
Non-Specific:
    - general code cleanup and beautification


2.0.2
-----
Issue #5:
- Subject found but no delimiter found. Program now abandons message with a level 2 log message.
- Regular expression used as delimiter character. Delimiter character now escaped by using re.escape() around variable
